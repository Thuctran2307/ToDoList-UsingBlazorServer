<div class="dropdown @(active ? "is-active" : "")">
    <div class="dropdown-trigger" @onclick="() => active = !active">
        <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
            <span>@SelectedValue</span>
            <span class="icon is-small">
                <i class="fas fa-angle-down" aria-hidden="true"></i>
            </span>
        </button>
    </div>
    <div class="dropdown-menu" id="dropdown-menu" role="menu">
        <div class="dropdown-content">
            @foreach (var option in Options)
            {
                <a class="dropdown-item" @onclick="() => {SelectedValue = option.Value; Console.WriteLine(SelectedValue);}">@option.Text</a>
            }
        </div>
    </div>
</div>

@code {

    private bool active = false;

    [Parameter] public List<DropdownOption> Options { get; set; }

    [Parameter] public string SelectedValue { get; set; }

    // oninit

    protected override void OnInitialized()
    {
        if (Options == null || Options.Count == 0)
        {
            throw new ArgumentException("Options must be provided");
        }


        SelectedValue = Options[0].Value;
        
    }

    public class DropdownOption
    {
        public string Value { get; set; }
        public string Text { get; set; }
    }
}